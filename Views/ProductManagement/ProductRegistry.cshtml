@model Tradie.Models.Products.ProductRegistryViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.AspNetCore.Identity.UserManager<User> userManager


@{
    ViewData["Title"] = "Product Management Page";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var adminName = (string)ViewData["AdminName"]!;
    var adminEmail = (string)ViewData["AdminEmail"]!;
    var currentUser = await userManager.GetUserAsync(User);
    var isAdmin = await userManager.IsInRoleAsync(currentUser, "Admin");
}

<link rel="stylesheet" href="~/css/adminproduct.css" />

<button class="mobile-nav-toggle" onclick="toggleSidebar()">☰ Menú</button>

<div class="admin-dashboard d-flex">
    <!-- Sidebar -->
    <aside class="sidebar p-4">
        <div>
            <p class="gestion-label"><i class="bi bi-grid-fill me-2"></i> Gestión Admin</p>
        </div>

        <ul class="nav flex-column gap-2">
            <li class="nav-item">
                <a class="nav-link d-flex align-items-center justify-content-between" href="#"
                   onclick="toggleSubmenu('productSubMenu', this)">
                    <div class="ges-prod-label">
                        <div><i class="bi bi-chevron-down"></i></div>
                        <div class="label-word"><span>Gestión de Productos</span></div>
                    </div>
                </a>

                <ul class="ps-3 mt-1 list-unstyled" id="productSubMenu" style="display: block;">
                    <li><a class="nav-link ps-4 active" href="#"><i class="bi bi-clipboard-data me-2"></i> Registro de Productos</a></li>
                </ul>
            </li>

            <li class="nav-item">
                <a class="nav-link d-flex align-items-center justify-content-between" href="#"
                   onclick="toggleSubmenu('userSubMenu', this)">
                    <div class="ges-usuario-label">
                        <div><i class="bi bi-chevron-right"></i></div>
                        <div class="label-word"><span>Gestión de Usuarios</span></div>
                    </div>
                </a>

                <ul class="ps-3 mt-1 list-unstyled" id="userSubMenu" style="display: none;">
                    <li><a asp-controller="Users" asp-action="Index" class="nav-link ps-4"><i class="bi bi-person-badge me-2"></i> Registro de usuarios</a></li>
                    <li><a class="nav-link ps-4" href="#"><i class="bi bi-person-lock me-2"></i> Roles</a></li>
                    <li><a class="nav-link ps-4" href="#"><i class="bi bi-shield-check me-2"></i> Permisos</a></li>
                </ul>
            </li>
        </ul>

        <!-- Lower part -->
        <div class="mt-auto pt-5">
            <a href="#" class="nav-link"><i class="btn-config bi-gear-fill me-2"></i>Configuración</a>
            <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <button type="submit" class="logout"><i class="bi bi-box-arrow-right me-2"></i> Cerrar Sesión</button>
            </form>
        </div>
    </aside>

    <!-- Main Content -->
    <section class="content p-4 flex-fill">
        <div class="section-header">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3 class="mb-0">Gestión de Productos</h3>
                <div class="d-flex gap-2">
                    <form class="d-flex align-items-center me-3" role="search" method="get">
                        <div class="input-group">
                            <input type="search" name="searchTerm" value="@Context.Request.Query["searchTerm"]"
                                   class="form-control" placeholder="Buscar productos..." aria-label="Search">
                            <button type="submit" class="btn btn-outline-secondary">
                                <i class="bi bi-search"></i>
                            </button>
                        </div>
                    </form>

                    <button class="btn btn-success" onclick="openModal('addProductModal')">
                        + Agregar producto
                    </button>
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table align-middle">
                <thead>
                    <tr>
                        <th>Nombre &amp; ID</th>
                        <th>Categoría</th>
                        <th>Subcategoría</th>
                        <th>Precio</th>
                        <th>Descuento</th>
                        <th>Stock</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var p in Model.Products)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="@p.ImageUrl" class="rounded me-3"
                                         width="48" height="48" style="object-fit: cover;"
                                         alt="@p.Name" />
                                    <div>
                                        <div class="fw-semibold">@p.Name</div>
                                        <div class="text-muted small">#ID @p.Id</div>
                                    </div>
                                </div>
                            </td>
                            <td>@(p.Category != null ? p.Category.Name : "Sin categoría")</td>
                            <td>@(p.Subcategory ?? "Sin subcategoría")</td>
                            <td>€@p.Price.ToString("F2")</td>
                            <td>
                                @(p.Discount.HasValue && p.Discount.Value > 0 ? p.Discount.Value.ToString("0") + "%" : "0%")

                            </td>
                            <td>@p.Stock</td>
                            <td>
                                @if (p.Stock > 0)
                                {
                                    <span class="badge bg-success">Disponible</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Agotado</span>
                                }
                            </td>
                            <td>
                                <div class="d-flex gap-2">
                                    <button type="button"
                                            class="Edit-Button"
                                            onclick="openEditModal(
                                            @p.Id,
                                            '@(p.Name != null ? p.Name.Replace("'", "\\'") : "")',
                                            @p.Price,
                                            @(p.Discount.HasValue ? p.Discount.Value.ToString("F2", System.Globalization.CultureInfo.InvariantCulture) : "0"),
                                            @p.Stock,
                                            '@(p.Category != null ? p.Category.Id.ToString() : "")',
                                            '@(p.Subcategory?.Replace("'", "\\'") ?? string.Empty)',
                                            '@(p.ImageUrl?.Replace("'", "\\'") ?? string.Empty)',
                                            '@(p.Description != null ? p.Description.Replace("'", "\\'") : "")'
                                        )">
                                        Editar
                                    </button>


                                    <button type="button"
                                            class="Delete-Button"
                                            onclick="confirmDelete(@p.Id)">
                                        Eliminar
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-between mt-3">
            @if (Model.CurrentPage > 1)
            {
                <a class="btn btn-outline-primary"
                   asp-action="ProductRegistry"
                   asp-route-page="@(Model.CurrentPage - 1)"
                   asp-route-searchTerm="@Model.SearchTerm"
                   asp-route-category="@Context.Request.Query["category"]">Anterior</a>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <a class="btn btn-outline-primary ms-auto"
                   asp-action="ProductRegistry"
                   asp-route-page="@(Model.CurrentPage + 1)"
                   asp-route-searchTerm="@Model.SearchTerm"
                   asp-route-category="@Context.Request.Query["category"]">Siguiente</a>
            }
        </div>


        <!-- Modal de Alta -->
        <div class="modal-overlay" id="addProductModal" style="display:none;">
            <div class="modal-content p-4 rounded shadow-lg position-relative">
                <button class="btn-close position-absolute top-0 end-0 m-3"
                        onclick="closeModal('addProductModal')"></button>
                <h4>Añadir Nuevo Producto</h4>

                <form asp-action="ProductRegistry" method="post">
                    @Html.AntiForgeryToken()

                    @if (isAdmin)
                    {
                        <div class="mb-3">
                            <label asp-for="NewProduct.SellerId" class="form-label">Vendedor</label>
                            <select asp-for="NewProduct.SellerId" class="form-control" asp-items="@(new SelectList(Model.Sellers, "Id", "UserName"))">
                                <option value="">Selecciona un vendedor</option>
                            </select>
                            <span asp-validation-for="NewProduct.SellerId" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        @* Para sellers ocultamos el campo, se asigna en backend *@
                        <input type="hidden" asp-for="NewProduct.SellerId" />
                    }

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="NewProduct.Name" class="form-label">Nombre</label>
                                <input asp-for="NewProduct.Name" class="form-control" />
                                <span asp-validation-for="NewProduct.Name" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="NewProduct.Price" class="form-label">Precio</label>
                                <input asp-for="NewProduct.Price" class="form-control" />
                                <span asp-validation-for="NewProduct.Price" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="NewProduct.DiscountPercentage" class="form-label">Descuento % (opcional)</label>
                                <input asp-for="NewProduct.DiscountPercentage" class="form-control" />
                                <span asp-validation-for="NewProduct.DiscountPercentage" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="NewProduct.Stock" class="form-label">Stock</label>
                                <input asp-for="NewProduct.Stock" class="form-control" />
                                <span asp-validation-for="NewProduct.Stock" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="NewProduct.CategoryId" class="form-label">Categoría</label>
                                <select asp-for="NewProduct.CategoryId" class="form-control" asp-items="@(new SelectList(Model.Categories, "Id", "Name"))">
                                    <option value="">Selecciona una categoría</option>
                                </select>
                                <span asp-validation-for="NewProduct.CategoryId" class="text-danger"></span>
                            </div>

                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="NewProduct.Subcategory" class="form-label">Subcategoría</label>
                                <input asp-for="NewProduct.Subcategory" class="form-control" />
                                <span asp-validation-for="NewProduct.Subcategory" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="NewProduct.ImageUrl" class="form-label">URL Imagen</label>
                                <input asp-for="NewProduct.ImageUrl" class="form-control" />
                                <span asp-validation-for="NewProduct.ImageUrl" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="NewProduct.Description" class="form-label">Descripción</label>
                                <textarea asp-for="NewProduct.Description" class="form-control"></textarea>
                                <span asp-validation-for="NewProduct.Description" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="text-end">
                        <button type="submit" class="btn-save-add">
                            Guardar Producto
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Modal de Edición -->
        <div class="modal-overlay" id="editProductModal" style="display:none;">
            <div class="custom-modal-box p-4 rounded shadow-lg bg-white position-relative">

                <button class="btn-close position-absolute top-0 end-0 m-3" onclick="closeModal('editProductModal')"></button>
                <h4>Editar Producto</h4>
                <form asp-controller="ProductManagement" asp-action="EditProduct" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="NewProduct.Id" id="editProductId" />

                    @if (isAdmin)
                    {
                        <div class="mb-3">
                            <label asp-for="NewProduct.SellerId" class="form-label">Vendedor</label>
                            <select asp-for="NewProduct.SellerId" class="form-control" asp-items="@(new SelectList(Model.Sellers, "Id", "UserName"))">
                                <option value="">Selecciona un vendedor</option>
                            </select>
                            <span asp-validation-for="NewProduct.SellerId" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        @* Para sellers ocultamos el campo, se asigna en backend *@
                        <input type="hidden" asp-for="NewProduct.SellerId" />
                    }

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="NewProduct.Name" class="form-label">Nombre</label>
                                <input asp-for="NewProduct.Name" class="form-control" id="editProductName" />
                                <span asp-validation-for="NewProduct.Name" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="NewProduct.Price" class="form-label">Precio</label>
                                <input asp-for="NewProduct.Price" class="form-control" id="editProductPrice" />
                                <span asp-validation-for="NewProduct.Price" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="NewProduct.DiscountPercentage" class="form-label">Descuento % (opcional)</label>
                                <input asp-for="NewProduct.DiscountPercentage" class="form-control" id="editProductDiscountPercentage" />
                                <span asp-validation-for="NewProduct.DiscountedPrice" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="NewProduct.Stock" class="form-label">Stock</label>
                                <input asp-for="NewProduct.Stock" class="form-control" id="editProductStock" />
                                <span asp-validation-for="NewProduct.Stock" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="NewProduct.Category" class="form-label">Categoría</label>
                                
                                <select id="editProductCategory" asp-for="NewProduct.CategoryId" asp-items="@(new SelectList(Model.Categories, "Id", "Name"))" class="form-control">
                                    <option value="">Selecciona una categoría</option>
                                </select>

                                <span asp-validation-for="NewProduct.Category" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="NewProduct.Subcategory" class="form-label">Subcategoría</label>
                                <input asp-for="NewProduct.Subcategory" class="form-control" id="editProductSubcategory" />
                                <span asp-validation-for="NewProduct.Subcategory" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="NewProduct.ImageUrl" class="form-label">URL Imagen</label>
                                <input asp-for="NewProduct.ImageUrl" class="form-control" id="editProductImageUrl" />
                                <span asp-validation-for="NewProduct.ImageUrl" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label asp-for="NewProduct.Description" class="form-label">Descripción</label>
                                <textarea asp-for="NewProduct.Description" class="form-control" id="editProductDescription"></textarea>
                                <span asp-validation-for="NewProduct.Description" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="text-end">
                        <button type="submit" class="btn-save-edit">Guardar Cambios</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Modal de Confirmación de Eliminación -->
        <div class="modal-overlay" id="deleteProductModal" style="display:none;">
            <div class="custom-modal-box p-4 rounded shadow-lg bg-white position-relative">

                <button class="btn-close position-absolute top-0 end-0 m-3" onclick="closeModal('deleteProductModal')"></button>
                <h5>Confirmar eliminación</h5>
                <p>¿Estás seguro de que deseas borrar este producto?</p>
                <form asp-controller="ProductManagement" asp-action="DeleteProduct" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteProductId" />
                    <div class="text-end">
                        <button type="button" class="btn btn-outline-secondary me-2" onclick="closeModal('deleteProductModal')">Cancelar</button>
                        <button type="submit" class="btn btn-danger">Borrar</button>
                    </div>
                </form>
            </div>
        </div>
    </section>
</div>

<!-- For toast feedback -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="toastFeedback" class="toast align-items-center text-white bg-success border-0" role="alert">
        <div class="d-flex">
            <div class="toast-body" id="toastMessage">Success!</div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>
    </div>
</div>

<script src="~/js/admin.js" asp-append-version="true"></script>
<script>
    function openEditModal(id, name, price, discountPercentage, stock, category, subcategory, imageUrl, description) {
        document.getElementById('editProductId').value = id;
        document.getElementById('editProductName').value = name;
        document.getElementById('editProductPrice').value = price;
        document.getElementById('editProductDiscountPercentage').value = discountPercentage;
        document.getElementById('editProductStock').value = stock;
        document.getElementById('editProductCategory').value = category;
        document.getElementById('editProductSubcategory').value = subcategory;
        document.getElementById('editProductImageUrl').value = imageUrl;
        document.getElementById('editProductDescription').value = description;
        document.getElementById('editProductModal').style.display = 'block';
    }

    function confirmDelete(id) {
        document.getElementById('deleteProductId').value = id;
        document.getElementById('deleteProductModal').style.display = 'block';
    }

    function toggleSidebar() {
        const sidebar = document.querySelector('.sidebar');
        sidebar.classList.toggle('active');
    }

    // Show Toast
    function showToast(message, isSuccess = true) {
      const toastEl = document.getElementById('toastFeedback');
      const toastMessage = document.getElementById('toastMessage');

      toastMessage.textContent = message;
      toastEl.classList.remove('bg-success', 'bg-danger');
      toastEl.classList.add(isSuccess ? 'bg-success' : 'bg-danger');

      const toast = new bootstrap.Toast(toastEl);
      toast.show();
    }
</script>