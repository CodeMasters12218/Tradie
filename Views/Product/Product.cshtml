@model Tradie.Models.Products.Product

@{
    ViewData["Title"] = "Product Details Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/product-details.css" />
<link rel="stylesheet" href="~/css/subcategory.css" />

<div class="product-page-container">
    <!-- LEFT COLUMN -->
    <div class="product-left-column">
        <div class="image-container">
            <!-- Image -->
            <img src="@Model.ImageUrl" alt="@Model.Name" class="product-image" />

            <!-- Favorite Button -->
            @{
                var isFavorited = ViewBag.WishlistProductIds != null &&
                ((List<int>)ViewBag.WishlistProductIds).Contains(Model.Id);
            }

            <form asp-controller="Wishlist"
                  asp-action="ToggleWishlistItem"
                  method="post"
                  class="d-inline">
                <input type="hidden" name="productId" value="@Model.Id" />
                <input type="hidden" name="returnUrl" value="@($"{Context.Request.Path}{Context.Request.QueryString}")" />
                <button type="submit"
                        class="btn btn-sm favorite-btn @(isFavorited ? "favorited" : "")"
                        onclick="toggleHeart(this)">
                    <i class="bi @(isFavorited ? "bi-heart-fill" : "bi-heart")"></i>
                </button>
            </form>
        </div>

        <!-- Add to Cart -->
        <form asp-controller="ShoppingCart"
              asp-action="AddToCart"
              method="post"
              class="d-inline">
            <input type="hidden" name="productId" value="@Model.Id" />
            <input type="hidden" name="returnUrl" value="@($"{Context.Request.Path}{Context.Request.QueryString}")" />
            <button type="submit"
                    class="btn btn-sm add-to-cart-btn @(ViewBag.CartProductIds != null && ((List<int>)ViewBag.CartProductIds).Contains(Model.Id) ? "added disabled" : "")"
            @(ViewBag.CartProductIds != null && ((List<int>)ViewBag.CartProductIds).Contains(Model.Id) ? "disabled" : "")
                    onclick="toggleCart(this)">
                <i class="bi @(ViewBag.CartProductIds != null && ((List<int>)ViewBag.CartProductIds).Contains(Model.Id) ? "bi-cart-check" : "bi-cart")"></i>
                @(ViewBag.CartProductIds != null && ((List<int>)ViewBag.CartProductIds).Contains(Model.Id) ? "Añadido en la cesta" : "Añadir a la cesta")
            </button>
        </form>


    </div>

    <!-- RIGHT COLUMN -->
    <div class="product-right-column">
        <h1 class="product-title">@Model.Name</h1>
        <p class="product-short-description">@Model.Description</p>

        <!-- Reviews -->
        <div class="product-reviews">
            @{
                var averageRating = Model.Reviews.Any() ? Model.Reviews.Average(r => r.Rating) : 0;
                for (int i = 1; i <= 5; i++)
                {
                    if (i <= Math.Floor(averageRating))
                    {
                        <i class="bi bi-star-fill star-filled"></i>
                    }
                    else if (i - averageRating < 1)
                    {
                        <i class="bi bi-star-half star-half"></i>
                    }
                    else
                    {
                        <i class="bi bi-star star-empty"></i>
                    }
                }
                <span class="rating-number">(@averageRating.ToString("0.0"))</span>
            }
        </div>

        <hr />

        <!-- Price -->
        <div class="product-price">€@Model.Price.ToString("F2")</div>

        <!-- Size Selection -->
        <div class="product-sizes">
            <label>Talla:</label>
            <div class="size-buttons">
                @foreach (var size in new[] { "XS", "S", "M", "L", "XL", "XXL" })
                {
                    <button class="size-btn">@size</button>
                }
            </div>
        </div>

        <!-- Color Selection -->
        <div class="product-colors">
            <label>Color:</label>
            <div class="color-options">
                @for (int i = 0; i < 6; i++)
                {
                    <button class="color-btn">
                        <img src="~/images/colors/color@(i + 1).png" alt="Color Option @(i + 1)" />
                    </button>
                }
            </div>
        </div>

        <hr />

        <!-- Long Description -->
        <div class="product-long-description">
            <h4>Descripción</h4>
            <p>@Model.Description</p>
        </div>

        <!-- Stock -->
        <div class="product-stock">
            @{
                var stockStatus = Model.Stock > 0 ? "Disponible" : "Agotado";
                var statusClass = Model.Stock > 0 ? "status-available" : "status-out";
            }
            <p><strong>Estado:</strong> <span class="@statusClass">@stockStatus</span></p>

            <p><strong>Stock:</strong> @Model.Stock</p>
        </div>
        <hr />

        <h4>Deja tu reseña</h4>
        @if (User.Identity.IsAuthenticated)
        {
            <form asp-controller="Products" asp-action="AddReview" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="productId" value="@Model.Id" />

                <div class="mb-3">
                    <label for="rating">Valoración:</label>
                    <select name="rating" id="rating" class="form-select" style="max-width: 120px;">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <option value="@i">@i estrella@(i > 1 ? "s" : "")</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="content">Tu reseña:</label>
                    <textarea name="content" id="content" class="form-control" rows="3"></textarea>
                </div>

                <button type="submit" class="btn btn-primary">Enviar reseña</button>
            </form>
        }
        else
        {
            <p>Debes <a asp-controller="Account" asp-action="Login">iniciar sesión</a> para escribir una reseña.</p>
        }

        <hr />
        <h4>Reseñas de usuarios</h4>
        @foreach (var r in Model.Reviews.OrderByDescending(r => r.CreatedAt))
        {
            <div class="review mb-4">
                <div class="d-flex align-items-center mb-1">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= r.Rating)
                        {
                            <i class="bi bi-star-fill text-warning"></i>
                        }
                        else
                        {
                            <i class="bi bi-star text-muted"></i>
                        }
                    }
                    <small class="text-muted ms-2">— @(r.Customer?.Name ?? "Usuario desconocido"), @r.CreatedAt.ToShortDateString()</small>
                </div>
                <p>@r.Content</p>
                @if (!string.IsNullOrEmpty(r.SellerResponse))
                {
                    <div class="ps-3 border-start">
                        <strong>Respuesta del vendedor:</strong>
                        <p>@r.SellerResponse</p>
                    </div>
                }
            </div>
        }
    </div>
</div>


<script src="~/js/site.js" asp-append-version="true"></script>